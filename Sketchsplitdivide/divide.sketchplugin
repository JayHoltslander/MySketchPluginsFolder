// Divide the shape(control z)

var f = function(){
	if(selection.count() != 2) {
		print("Selection is wrong");
		return;
	}
	var i1 = selection[0];
	var i2 = selection[1];
	var i3 = [i1 duplicate];
	var i4 = [i2 duplicate];
	var i5 = [i3 duplicate];
	var i6 = [i4 duplicate];

	var a = NSApplication.sharedApplication();
	var call_action = function(menuitem) {
		var action = menuitem.action();
		print(action);
		var target = a.targetForAction(action);
		print(target);
		
		var method_signature = [[target class] instanceMethodSignatureForSelector: action];
		var invocation = [NSInvocation invocationWithMethodSignature: method_signature];
		[invocation setTarget:target];
		[invocation setSelector: action];
		[invocation invoke];
	};
	var m = a.mainMenu();
	var layer_m = m.itemWithTitle("Layer").submenu();
	var arrange_m = m.itemWithTitle("Arrange").submenu(); //[0] - bring forward
	var combine_m = layer_m.itemWithTitle("Combine").submenu();
	var paths_m = layer_m.itemWithTitle("Paths").submenu();

	[i1 select:true byExpandingSelection:false];
	[i2 select:true byExpandingSelection:true];
	call_action(combine_m.itemWithTitle("Intersect"));
	call_action(paths_m.itemWithTitle("Flatten"));

	[i5 select:true byExpandingSelection:false];
	call_action(arrange_m.itemWithTitle("Bring To Front"));

	[i6 select:true byExpandingSelection:false];
	call_action(arrange_m.itemWithTitle("Bring To Front"));


	[i3 select:true byExpandingSelection:false];
	[i6 select:true byExpandingSelection:true];
	call_action(combine_m.itemWithTitle("Subtract"));
	call_action(paths_m.itemWithTitle("Flatten"));

	[i5 select:true byExpandingSelection:false];
	[i4 select:true byExpandingSelection:true];
	call_action(combine_m.itemWithTitle("Subtract"));
	call_action(paths_m.itemWithTitle("Flatten"));

	[[doc currentPage] deselectAllLayers];

}();