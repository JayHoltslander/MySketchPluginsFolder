function sortedArray(arr, sortDescriptorKey) {
  var sortDescriptor = [NSSortDescriptor sortDescriptorWithKey:sortDescriptorKey ascending:1];
  return [selection sortedArrayUsingDescriptors:[sortDescriptor]];
}

function createLabel(text, frame) {
  var label = [[NSTextField alloc] initWithFrame:frame];
  [label setStringValue:text];
  [label setFont:[NSFont boldSystemFontOfSize:12]];
  [label setBezeled:false];
  [label setDrawsBackground:false];
  [label setEditable:false];
  [label setSelectable:false];
  return label;
}

function createChoices(msg) {
  var viewBox = [[NSBox alloc] initWithFrame:NSMakeRect(0, 0, 0, 0)];
  [viewBox setTitle:""];

  [viewBox addSubview:createLabel("Direction:", NSMakeRect(0,85,300, 20))];

  var prototype = [[NSButtonCell alloc] init];
  [prototype setButtonType:NSRadioButton];
  [prototype setTitle:"---------------------------------------------"];
  var myMatrix = [[NSMatrix alloc] initWithFrame:NSMakeRect(0, 45, 300, 40)
    mode:NSRadioModeMatrix
    prototype:prototype
    numberOfRows:2
    numberOfColumns:1];
  var cellArray = [myMatrix cells];
  [[cellArray objectAtIndex:0] setTitle:"Vertically"];
  [[cellArray objectAtIndex:1] setTitle:"Horizontally"];
  [viewBox addSubview:myMatrix];

  [viewBox addSubview:createLabel("Spacing:", NSMakeRect(0, 20, 300, 20))];

  var spacingField = [[NSTextField alloc] initWithFrame:NSMakeRect(0, 0, 40, 20)];
  [spacingField setStringValue:10];
  [viewBox addSubview:spacingField];

  [viewBox sizeToFit];

  var alert = [[NSAlert alloc] init];
  [alert setMessageText:msg];
  [alert addButtonWithTitle:"OK"];
  [alert addButtonWithTitle:"Cancel"];
  [alert setAccessoryView:viewBox];

  var responseCode = [alert runModal];

  var dimension = [[myMatrix selectedCell] title];
  return [responseCode, dimension, [spacingField integerValue]];
}

if ([selection count] > 0) {
  var choices = createChoices('Distribute ' + [selection count] + ' objects'),
      buttonChoice = choices[0] == 1000 ? "OK" : "Cancel",
      dimension = choices[1],
      spacing = choices[2];

  if (buttonChoice === "OK") {
    var sortedByLeft  = sortedArray(selection, "frame.left"),
        sortedByTop   = sortedArray(selection, "frame.top"),
        firstLeft     = sortedByLeft[0],
        firstTop      = sortedByTop[0],
        left          = [[firstLeft frame] left],
        top           = [[firstTop frame] top];

    if (String(dimension) === "Vertically") {
      var loopV = [sortedByTop objectEnumerator];
      while (layer = [loopV nextObject]) {
        [[layer frame] setY:top];
        top = [[layer frame] y] + [[layer frame] height] + spacing;
      });
    }
    else {
      var loopH = [sortedByTop objectEnumerator];
      while (layer = [loopH nextObject]) {
        [[layer frame] setX:left];
        left = [[layer frame] x] + [[layer frame] width] + spacing;
      });
    }
  }
}
else {
  var app = [NSApplication sharedApplication];
  [app displayDialog:"No selection, no fun." withTitle:"Distributor is sad"]
}
