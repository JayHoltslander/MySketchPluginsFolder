@import 'lib/utils.js'

var baseUrl = 'http://lorempixel.com/';
var serviceName = 'lorempixel';
var serviceStorage = getServiceStorage(serviceName);
var el = getElToAppendTo();

if (el != null) {
  var alert = createAlertBase(serviceName);

  alert.setMessageText("Lorem Pixel Options");
  alert.setInformativeText("Customize the image that will be created.");

  var types = [
    'random',
    'abstract',
    'animals',
    'business',
    'cats',
    'city',
    'food',
    'nightlife',
    'fashion',
    'people',
    'nature',
    'sports',
    'technics',
    'transport'
  ];

  // We use indexOf here because we store the value selected, not the index.
  var typeSelect = createSelect(types, types.indexOf(serviceStorage.type));

  alert.addTextLabelWithValue("Category:");
  alert.addAccessoryView(typeSelect);

  addDimensionFieldsToAlert(alert, serviceStorage);

  var responseCode = alert.runModal();

  handleAlertResponse(alert, responseCode, el);
}

function handleAlertResponse(alert, responseCode, el) {
  // The OK button will return a code of 1000
  // Cancel is 1001.
  // The codes are odd. They are based off the button's position in the view.
  // They are explain in more detail in the NSAlert docs
  // https://developer.apple.com/library/mac/documentation/cocoa/reference/applicationkit/classes/NSAlert_Class/Reference/Reference.html#//apple_ref/doc/constant_group/Button_Return_Values
  // There's no anchor to it, but search for "Button Return Values" in the page
  if (responseCode == "1000") {

    var opts = {
      type: valAtIndex(alert, 1),
      width: valAtIndex(alert, 3),
      height: valAtIndex(alert, 5)
    }

    storeUserValuesForService(opts, serviceStorage);

    var type = '';

    if (opts['type'] != 'random') {
      type = '/' + opts['type'];
    }

    var size = opts.width + '/' + opts.height;
    var url = baseUrl + size + type;

    sketch.doc.showMessage('Creating a ' + size + 'px image from lorempixel.com...');

    createAndPlaceImg(url, size, el);
  }
}
